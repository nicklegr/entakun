$ ->
  # prevent XHR response caching by IE
  $.ajaxSetup({ cache: false })

  $.cookie.defaults['expires'] = 365 # @todo unlimited?
  $.cookie.json = true

  $('[placeholder]').ahPlaceholder({
    placeholderColor : 'silver',
    placeholderAttr  : 'placeholder',
    likeApple        : true
  })

  # task list
  $("#tasks").sortable({
    connectWith: "ul.assigned-task",
    receive: (event, ui) ->
      $.ajax({
        async: true,
        type: "POST",
        url: "<%= url_for "/deassign_task" %>",
        data: { project: project_key, task_id: ui.item.data('id') },
        dataType: 'json',
      })

    update: (event, ui) ->
      data = $("#tasks").sortable('serialize')
      data = data.replace(/.*template&/, '') # remove template element
      data = "project=#{project_key}&" + data
      $.post("<%= url_for "/task_sorted" %>", data)
  })

  # task input
  $("input#task").keypress((event) ->
    text = $("input#task").val()

    if text != "" && (event.keyCode && event.keyCode == 13)
      add_task(text)
      $("input#task").val('')
  )

  # trashbox
  $("#trashbox").droppable({
    tolerance: 'touch',

    activate: (event, ui) ->
      $('#trashbox-img').attr('src', '<%= url_for "/img/TrashBox_Opened.png" %>')

    deactivate: (event, ui) ->
      $('#trashbox-img').attr('src', '<%= url_for "/img/TrashBox_Closed.png" %>')

    drop: (event, ui) ->
      $.ajax({
        async: true,
        type: "POST",
        url: "<%= url_for "/complete_task" %>",
        data: { project: project_key, task_id: ui.draggable.data('id') },
        dataType: 'json',
      })

      ui.draggable.addClass('ui-state-disabled')
      if !$('#show_trashes_check').attr('checked')
        ui.draggable.hide()

      $('#trashbox-img').effect('bounce', {}, 150)
  })

  # get tasks
  tasks = null
  $.ajax({
    async: false,
    type: "GET",
    url: "<%= url_for "/tasks" %>",
    data: { project: project_key },
    dataType: 'json',
  }).done((data) ->
    tasks = data
  )

  $.each(tasks, (i) ->
    task = add_task_html(this._id, this.name)
    if this.complete
      task.addClass('ui-state-disabled')
      if !$('#show_trashes_check').attr('checked')
        task.hide()
  )

  # get staffs
  staffs = null
  $.ajax({
    async: false,
    type: "GET",
    url: "<%= url_for "/staffs" %>",
    data: { project: project_key },
    dataType: 'json',
  }).done((data) ->
    staffs = data
  )

  $.each(staffs, (i) ->
    staff = add_staff_html(this._id, this.name)

    if this.task_id
      staff.find('.assigned-task').append($('#task_' + this.task_id))
  )

  # add staff handler
  $('#add-staff').click(add_staff_event)

  update_followees()

  # show trash toggle
  $('#show_trashes_check').change(() ->
      if $(this).attr("checked")
        $('.ui-state-disabled').show()
      else
        $('.ui-state-disabled').hide()
  )

  # project title
  update_project_title()
  enable_inplace_edit($('#project-name'), '<%= url_for "/edit_project" %>', (value, settings) ->
    update_title(value)
  )

  setup_add_follow_modal()
